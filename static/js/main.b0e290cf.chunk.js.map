{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Notification.jsx","components/Statistics/Statistics.jsx","components/Buttons/FeedbackOptions.jsx","App.js","index.js"],"names":["Section","title","children","className","Notification","message","StatsMarkup","good","neutral","bad","total","positiveFeedback","FeedbackOptions","options","OnLeaveFeedback","map","option","type","id","onClick","App","state","handleOnButtonClick","event","key","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAeeA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIC,UAAU,eAAd,SAA8BF,IAC7BC,MCEUE,G,KALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGF,UAAU,UAAb,SAAwBE,MC2B/CC,EAzBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OAClB,sBAAKR,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,wBACW,IAAVO,EACC,cAAC,EAAD,CAAcL,QAAQ,0BAEtB,qCACE,oBAAGF,UAAU,YAAb,mBAAgCI,KAChC,oBAAGJ,UAAU,YAAb,sBAAmCK,KACnC,oBAAGL,UAAU,YAAb,kBAA+BM,KAC/B,oBAAGN,UAAU,YAAb,oBAAiCO,KACjC,oBAAGP,UAAU,YAAb,gCAA6CQ,EAA7C,cCYOC,G,MAxBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIX,UAAU,aAAd,SACGU,EAAQE,KAAI,SAAAC,GACX,OACE,oBAAIb,UAAU,iBAAd,SACE,wBACEA,UAAU,cACVc,KAAK,SACLC,GAAIF,EACJG,QAASL,EAJX,SAMGE,KAP+BA,UCoC7BI,E,4MAtCbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,oBAAsB,SAAAC,GACpB,IAAMC,EAAMD,EAAME,OAAOP,GACzB,OAAO,EAAKQ,UAAS,SAAAC,GAAS,sBAAQH,EAAMG,EAAUH,GAAO,O,EAG/DI,mBAAqB,WACnB,OAAO,EAAKP,MAAMd,KAAO,EAAKc,MAAMb,QAAU,EAAKa,MAAMZ,K,EAE3DoB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKV,MAAMd,KAAO,EAAKqB,qBAAwB,M,4CAGpE,WAAU,IAAD,EACwBI,KAAKX,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAAC,EAAD,CAASR,MAAM,wBAAf,UACE,cAAC,EAAD,CACEY,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBkB,KAAKV,sBAExB,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,KAAKJ,qBACZjB,iBAAkBqB,KAAKH,2C,GAhCfI,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b0e290cf.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './section.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h1 className=\"sectionTitle\">{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport './statistics.css';\r\n\r\nconst Notification = ({ message }) => <p className=\"message\">{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React from 'react';\r\nimport Notification from './Notification';\r\nimport PropTypes from 'prop-types';\r\nimport './statistics.css';\r\n\r\nconst StatsMarkup = ({ good, neutral, bad, total, positiveFeedback }) => (\r\n  <div className=\"statsMarkup\">\r\n    <h2 className=\"statsTitle\">Statistics</h2>\r\n    {total === 0 ? (\r\n      <Notification message=\"Feedback wasn't given\" />\r\n    ) : (\r\n      <>\r\n        <p className=\"statsItem\">Good: {good}</p>\r\n        <p className=\"statsItem\">Neutral: {neutral}</p>\r\n        <p className=\"statsItem\">Bad: {bad}</p>\r\n        <p className=\"statsItem\">Total: {total}</p>\r\n        <p className=\"statsItem\">Positive feedback: {positiveFeedback}%</p>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nStatsMarkup.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatsMarkup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './buttons.css';\r\n\r\nconst FeedbackOptions = ({ options, OnLeaveFeedback }) => (\r\n  <ul className=\"buttonList\">\r\n    {options.map(option => {\r\n      return (\r\n        <li className=\"buttonListItem\" key={option}>\r\n          <button\r\n            className=\"feedbackBtn\"\r\n            type=\"button\"\r\n            id={option}\r\n            onClick={OnLeaveFeedback}\r\n          >\r\n            {option}\r\n          </button>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import { Component } from 'react';\nimport Section from './components/Section/Section';\nimport StatsMarkup from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/Buttons/FeedbackOptions';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleOnButtonClick = event => {\n    const key = event.target.id;\n    return this.setState(prevState => ({ [key]: prevState[key] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          OnLeaveFeedback={this.handleOnButtonClick}\n        />\n        <StatsMarkup\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positiveFeedback={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}